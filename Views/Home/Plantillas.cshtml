@{
    ViewData["Title"] = "Gesti√≥n de Plantillas Recurrentes";
}

<style>
    .table-hover tbody tr:hover {
        background-color: #f5f5f5;
        cursor: pointer;
    }
    .btn-group-actions {
        white-space: nowrap;
    }
    .badge-success {
        background-color: #28a745;
    }
    .badge-secondary {
        background-color: #6c757d;
    }
</style>

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">üìã Plantillas de Facturaci√≥n Recurrente</h4>
                        <button class="btn btn-light" onclick="window.location.href='/Home/NuevaFactura'">
                            <i class="fas fa-plus"></i> Nueva Plantilla
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Filtros -->
                    <div class="row mb-3">
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="filtroNombre" placeholder="Buscar por nombre...">
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="filtroEstado">
                                <option value="">Todos los estados</option>
                                <option value="1">Activas</option>
                                <option value="0">Inactivas</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="filtroTipo">
                                <option value="">Todos los tipos</option>
                                <option value="DiaMes">D√≠a del mes</option>
                                <option value="DiaSemana">D√≠a de la semana</option>
                                <option value="Quincenal">Quincenal</option>
                                <option value="Mensual">Mensual</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button class="btn btn-success w-100" onclick="ejecutarFacturacionManual()">
                                ‚ö° Ejecutar Todas Ahora
                            </button>
                        </div>
                    </div>

                    <!-- Tabla de plantillas -->
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>ID</th>
                                    <th>Nombre</th>
                                    <th>Cliente</th>
                                    <th>RFC Cliente</th>
                                    <th>Programaci√≥n</th>
                                    <th>Pr√≥xima Ejecuci√≥n</th>
                                    <th>Estado</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="tablaPlantillas">
                                <!-- Las filas se cargar√°n din√°micamente aqu√≠ -->
                            </tbody>
                        </table>
                    </div>

                    <!-- Mensaje cuando no hay plantillas -->
                    <div id="sinPlantillas" class="text-center py-5" style="display:none;">
                        <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                        <h5>No hay plantillas configuradas</h5>
                        <p class="text-muted">Cree su primera plantilla de facturaci√≥n recurrente</p>
                        <button class="btn btn-primary" onclick="window.location.href='/'">
                            <i class="fas fa-plus"></i> Crear Primera Plantilla
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para Editar CFDI -->
    <div class="modal fade" id="modalEditarCFDI" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title">üìÑ Editar Datos CFDI</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="formularioCFDI">
                        <!-- El formulario de CFDI se cargar√° aqu√≠ -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="guardarCambiosCFDI()">
                        <i class="fas fa-save"></i> Guardar Cambios
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para Editar Programaci√≥n -->
    <div class="modal fade" id="modalEditarScheduling" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title">‚è∞ Editar Programaci√≥n</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="formularioScheduling">
                        <!-- El formulario de programaci√≥n se cargar√° aqu√≠ -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="guardarCambiosScheduling()">
                        <i class="fas fa-save"></i> Guardar Cambios
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Historial -->
    <div class="modal fade" id="modalHistorial" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-secondary text-white">
                    <h5 class="modal-title">üìä Historial de Ejecuciones</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="historialContent">
                        <!-- El historial se cargar√° din√°micamente -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let plantillasData = [];
    let plantillaActual = null;

    $(document).ready(function() {
        cargarPlantillas();

        // Configurar filtros en tiempo real
        $('#filtroNombre').on('keyup', filtrarPlantillas);
        $('#filtroEstado, #filtroTipo').on('change', filtrarPlantillas);
    });

    function cargarPlantillas() {
        $.get('/Home/ObtenerPlantillas')
            .done(function(response) {
                if (response.success) {
                    plantillasData = response.plantillas;
                    mostrarPlantillas(response.plantillas);
                } else {
                    mostrarError('No se pudieron cargar las plantillas');
                }
            })
            .fail(function() {
                mostrarError('Error al conectar con el servidor');
            });
    }

    function mostrarPlantillas(plantillas) {
        const tbody = $('#tablaPlantillas');
        tbody.empty();

        if (!plantillas || plantillas.length === 0) {
            $('#tablaPlantillas').closest('.table-responsive').hide();
            $('#sinPlantillas').show();
            return;
        }

        $('#tablaPlantillas').closest('.table-responsive').show();
        $('#sinPlantillas').hide();

        plantillas.forEach(function(plantilla) {
            const estadoBadge = plantilla.activa
                ? '<span class="badge badge-success">Activa</span>'
                : '<span class="badge badge-secondary">Inactiva</span>';

            const proximaEjecucion = plantilla.proximaEjecucion
                ? new Date(plantilla.proximaEjecucion).toLocaleDateString('es-MX')
                : 'No programada';

            const programacion = describeProgramacion(plantilla);

            const fila = `
                <tr data-id="${plantilla.id}">
                    <td>${plantilla.id}</td>
                    <td><strong>${plantilla.nombre}</strong></td>
                    <td>${plantilla.clienteNombre || 'N/A'}</td>
                    <td>${plantilla.clienteRFC || 'N/A'}</td>
                    <td>${programacion}</td>
                    <td>${proximaEjecucion}</td>
                    <td>${estadoBadge}</td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-info" onclick="editarCFDI(${plantilla.id})" title="Editar CFDI">
                                <i class="fas fa-file-invoice"></i> CFDI
                            </button>
                            <button class="btn btn-warning" onclick="editarScheduling(${plantilla.id})" title="Editar Programaci√≥n">
                                <i class="fas fa-clock"></i> Prog
                            </button>
                            <button class="btn btn-secondary" onclick="verHistorial(${plantilla.id})" title="Ver Historial">
                                <i class="fas fa-history"></i>
                            </button>
                            <button class="btn ${plantilla.activa ? 'btn-danger' : 'btn-success'}"
                                    onclick="toggleEstado(${plantilla.id}, ${plantilla.activa})"
                                    title="${plantilla.activa ? 'Desactivar' : 'Activar'}">
                                <i class="fas fa-${plantilla.activa ? 'pause' : 'play'}"></i>
                            </button>
                            <button class="btn btn-primary" onclick="ejecutarPlantilla(${plantilla.id})" title="Ejecutar Ahora">
                                <i class="fas fa-bolt"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `;
            tbody.append(fila);
        });
    }

    function describeProgramacion(plantilla) {
        switch(plantilla.tipoProgramacion) {
            case 'DiaMes':
                return `D√≠a ${plantilla.diaEjecucion} de cada mes`;
            case 'DiaSemana':
                const intervalo = plantilla.intervaloEjecucion === 1 ? 'Cada' : `Cada ${plantilla.intervaloEjecucion}`;
                return `${intervalo} ${plantilla.diaSemana}`;
            case 'Quincenal':
                return 'D√≠as 1 y 15 de cada mes';
            case 'Mensual':
                return 'Primer d√≠a de cada mes';
            default:
                return 'No definido';
        }
    }

    function filtrarPlantillas() {
        const nombre = $('#filtroNombre').val().toLowerCase();
        const estado = $('#filtroEstado').val();
        const tipo = $('#filtroTipo').val();

        const plantillasFiltradas = plantillasData.filter(function(plantilla) {
            let cumple = true;

            if (nombre && !plantilla.nombre.toLowerCase().includes(nombre)) {
                cumple = false;
            }

            if (estado !== '' && plantilla.activa != (estado === '1')) {
                cumple = false;
            }

            if (tipo && plantilla.tipoProgramacion !== tipo) {
                cumple = false;
            }

            return cumple;
        });

        mostrarPlantillas(plantillasFiltradas);
    }

    function editarCFDI(id) {
        plantillaActual = plantillasData.find(p => p.id === id);

        $.get('/Home/ObtenerPlantilla', { id: id })
            .done(function(response) {
                if (response.success) {
                    mostrarFormularioCFDI(response.plantilla, response.conceptos);
                    $('#modalEditarCFDI').modal('show');
                }
            });
    }

    function mostrarFormularioCFDI(plantilla, conceptos) {
        let conceptosHtml = '';
        if (conceptos && conceptos.length > 0) {
            conceptos.forEach((concepto, index) => {
                conceptosHtml += `
                    <div class="card mb-2">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <label>Clave Producto</label>
                                    <input type="text" class="form-control" value="${concepto.claveProdServ}" readonly>
                                </div>
                                <div class="col-md-3">
                                    <label>Unidad</label>
                                    <input type="text" class="form-control" value="${concepto.claveUnidad}" readonly>
                                </div>
                                <div class="col-md-2">
                                    <label>Cantidad</label>
                                    <input type="text" class="form-control" id="cantidad_${index}" value="${concepto.cantidad}">
                                </div>
                                <div class="col-md-2">
                                    <label>Valor Unitario</label>
                                    <input type="text" class="form-control" id="valorUnitario_${index}" value="${concepto.valorUnitario}">
                                </div>
                                <div class="col-md-2">
                                    <label>Importe</label>
                                    <input type="text" class="form-control" id="importe_${index}" value="${concepto.importe}" readonly>
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-12">
                                    <label>Descripci√≥n</label>
                                    <textarea class="form-control" id="descripcion_${index}" rows="2">${concepto.descripcion}</textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
        }

        $('#formularioCFDI').html(`
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Nombre de la Plantilla</label>
                    <input type="text" class="form-control" id="editNombre" value="${plantilla.nombre}">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Serie</label>
                    <input type="text" class="form-control" id="editSerie" value="${plantilla.serie || ''}">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Folio</label>
                    <input type="text" class="form-control" id="editFolio" value="${plantilla.folio || ''}">
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-3">
                    <label class="form-label">Forma de Pago</label>
                    <input type="text" class="form-control" id="editFormaPago" value="${plantilla.formaPago}" readonly>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Uso CFDI</label>
                    <input type="text" class="form-control" id="editUsoCFDI" value="${plantilla.usoCFDI}" readonly>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Moneda</label>
                    <input type="text" class="form-control" id="editMoneda" value="${plantilla.moneda}" readonly>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Tipo IVA</label>
                    <select class="form-select" id="editTipoIVA">
                        <option value="ConIVA" ${plantilla.tipoIVA === 'ConIVA' ? 'selected' : ''}>Con IVA (16%)</option>
                        <option value="SinIVA" ${plantilla.tipoIVA === 'SinIVA' ? 'selected' : ''}>Sin IVA</option>
                        <option value="IVA0" ${plantilla.tipoIVA === 'IVA0' ? 'selected' : ''}>IVA 0%</option>
                    </select>
                </div>
            </div>

            <h6>Conceptos</h6>
            ${conceptosHtml}
        `);
    }

    function editarScheduling(id) {
        plantillaActual = plantillasData.find(p => p.id === id);

        $.get('/Home/ObtenerPlantilla', { id: id })
            .done(function(response) {
                if (response.success) {
                    mostrarFormularioScheduling(response.plantilla);
                    $('#modalEditarScheduling').modal('show');
                }
            });
    }

    function mostrarFormularioScheduling(plantilla) {
        $('#formularioScheduling').html(`
            <div class="mb-3">
                <label class="form-label">Estado de la Plantilla</label>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="editActiva" ${plantilla.activa ? 'checked' : ''}>
                    <label class="form-check-label" for="editActiva">
                        ${plantilla.activa ? 'Activa' : 'Inactiva'}
                    </label>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Tipo de Programaci√≥n</label>
                <select class="form-select" id="editTipoProgramacion" onchange="cambiarTipoProgramacion()">
                    <option value="DiaMes" ${plantilla.tipoProgramacion === 'DiaMes' ? 'selected' : ''}>D√≠a espec√≠fico del mes</option>
                    <option value="DiaSemana" ${plantilla.tipoProgramacion === 'DiaSemana' ? 'selected' : ''}>D√≠a de la semana</option>
                    <option value="Quincenal" ${plantilla.tipoProgramacion === 'Quincenal' ? 'selected' : ''}>Quincenal (1 y 15)</option>
                    <option value="Mensual" ${plantilla.tipoProgramacion === 'Mensual' ? 'selected' : ''}>Primer d√≠a del mes</option>
                </select>
            </div>

            <div id="opcionesDiaMes" style="${plantilla.tipoProgramacion === 'DiaMes' ? '' : 'display:none'}">
                <div class="mb-3">
                    <label class="form-label">D√≠a del mes</label>
                    <input type="number" class="form-control" id="editDiaEjecucion"
                           min="1" max="31" value="${plantilla.diaEjecucion || 1}">
                </div>
            </div>

            <div id="opcionesDiaSemana" style="${plantilla.tipoProgramacion === 'DiaSemana' ? '' : 'display:none'}">
                <div class="mb-3">
                    <label class="form-label">D√≠a de la semana</label>
                    <select class="form-select" id="editDiaSemana">
                        <option value="Lunes" ${plantilla.diaSemana === 'Lunes' ? 'selected' : ''}>Lunes</option>
                        <option value="Martes" ${plantilla.diaSemana === 'Martes' ? 'selected' : ''}>Martes</option>
                        <option value="Mi√©rcoles" ${plantilla.diaSemana === 'Mi√©rcoles' ? 'selected' : ''}>Mi√©rcoles</option>
                        <option value="Jueves" ${plantilla.diaSemana === 'Jueves' ? 'selected' : ''}>Jueves</option>
                        <option value="Viernes" ${plantilla.diaSemana === 'Viernes' ? 'selected' : ''}>Viernes</option>
                        <option value="S√°bado" ${plantilla.diaSemana === 'S√°bado' ? 'selected' : ''}>S√°bado</option>
                        <option value="Domingo" ${plantilla.diaSemana === 'Domingo' ? 'selected' : ''}>Domingo</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Intervalo (semanas)</label>
                    <input type="number" class="form-control" id="editIntervaloEjecucion"
                           min="1" max="4" value="${plantilla.intervaloEjecucion || 1}">
                </div>
            </div>

            <div class="alert alert-info">
                <strong>Pr√≥xima ejecuci√≥n:</strong>
                <span id="proximaEjecucionTexto">
                    ${plantilla.proximaEjecucion ? new Date(plantilla.proximaEjecucion).toLocaleDateString('es-MX') : 'No programada'}
                </span>
            </div>
        `);
    }

    function cambiarTipoProgramacion() {
        const tipo = $('#editTipoProgramacion').val();
        $('#opcionesDiaMes').toggle(tipo === 'DiaMes');
        $('#opcionesDiaSemana').toggle(tipo === 'DiaSemana');
    }

    function guardarCambiosCFDI() {
        // TODO: Implementar guardado de cambios CFDI
        alert('Funci√≥n en desarrollo: Guardar cambios CFDI');
        $('#modalEditarCFDI').modal('hide');
    }

    function guardarCambiosScheduling() {
        // TODO: Implementar guardado de cambios de programaci√≥n
        alert('Funci√≥n en desarrollo: Guardar cambios de programaci√≥n');
        $('#modalEditarScheduling').modal('hide');
    }

    function verHistorial(id) {
        $.get('/Home/ObtenerHistorialPlantilla', { id: id })
            .done(function(response) {
                if (response.success) {
                    mostrarHistorial(response.historial);
                    $('#modalHistorial').modal('show');
                }
            });
    }

    function mostrarHistorial(historial) {
        if (!historial || historial.length === 0) {
            $('#historialContent').html('<p class="text-muted text-center">No hay ejecuciones registradas</p>');
            return;
        }

        let html = `
            <div class="table-responsive">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Fecha</th>
                            <th>UUID</th>
                            <th>Total</th>
                            <th>Estado</th>
                            <th>Mensaje</th>
                        </tr>
                    </thead>
                    <tbody>`;

        historial.forEach(function(item) {
            const estado = item.exitosa
                ? '<span class="badge badge-success">Exitosa</span>'
                : '<span class="badge badge-danger">Error</span>';

            html += `
                <tr>
                    <td>${new Date(item.fechaGeneracion).toLocaleString('es-MX')}</td>
                    <td><small>${item.uuid || 'N/A'}</small></td>
                    <td>$${item.total.toFixed(2)}</td>
                    <td>${estado}</td>
                    <td><small>${item.mensajeError || 'OK'}</small></td>
                </tr>`;
        });

        html += '</tbody></table></div>';
        $('#historialContent').html(html);
    }

    function toggleEstado(id, estadoActual) {
        const accion = estadoActual ? 'desactivar' : 'activar';
        if (!confirm(`¬øDesea ${accion} esta plantilla?`)) return;

        $.post('/Home/ToggleEstadoPlantilla', { id: id })
            .done(function(response) {
                if (response.success) {
                    cargarPlantillas();
                    mostrarExito(response.mensaje);
                }
            });
    }

    function ejecutarPlantilla(id) {
        if (!confirm('¬øDesea ejecutar esta plantilla ahora?')) return;

        mostrarCargando('Ejecutando plantilla...');

        // TODO: Implementar ejecuci√≥n individual
        alert('Funci√≥n en desarrollo: Ejecutar plantilla individual');
        ocultarCargando();
    }

    function ejecutarFacturacionManual() {
        if (!confirm('¬øDesea ejecutar TODAS las plantillas activas ahora?')) return;

        mostrarCargando('Ejecutando facturas...');

        $.post('/Home/EjecutarFacturacionManual')
            .done(function(response) {
                ocultarCargando();
                if (response.success) {
                    mostrarExito(response.mensaje);
                    cargarPlantillas();
                } else {
                    mostrarError(response.error || 'Error al ejecutar facturas');
                }
            })
            .fail(function() {
                ocultarCargando();
                mostrarError('Error de conexi√≥n');
            });
    }

    function mostrarError(mensaje) {
        // Mostrar toast o alert de error
        alert('‚ùå ' + mensaje);
    }

    function mostrarExito(mensaje) {
        // Mostrar toast o alert de √©xito
        alert('‚úÖ ' + mensaje);
    }

    function mostrarCargando(mensaje) {
        // TODO: Implementar spinner de carga
        console.log('Cargando: ' + mensaje);
    }

    function ocultarCargando() {
        // TODO: Ocultar spinner
        console.log('Carga completada');
    }
</script>
}